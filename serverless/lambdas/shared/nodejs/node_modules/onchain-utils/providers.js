// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: MIT-0

const { providers } = require('ethers');
const AWSHttpProvider = require('onchain-utils/aws-web3-http-provider');
const nodeId = process.env.nodeId;
const networkId = process.env.networkId;
const defaultEnv = process.env.ENV || "AWS";


const getHTTPendpoint = async (nodeId, networkId) => {
    const amb = new (require('aws-sdk/clients/managedblockchain'))()
    const param = {
     NodeId: nodeId,
     NetworkId: networkId
    };
    const retrievedNode = await amb.getNode(param).promise();
    return retrievedNode.Node.FrameworkAttributes.Ethereum.HttpEndpoint
}

const getProvider = async (env = defaultEnv) =>  {
    if (env == "AWS") {
      let endpoint = await getHTTPendpoint(nodeId,networkId)
      endpoint = `https://${endpoint}`;
      const baseProvider = new AWSHttpProvider(endpoint);
      const provider = new providers.Web3Provider(baseProvider);
      return provider;
    }
    else {
      const infura = new providers.InfuraProvider("goerli")
      return infura;
    }
  }
  
  module.exports = {
    getProvider
  }
